name: Next.js Integration test

on:
  pull_request:
    branches: [main, 'chore/ci-e2e-nextjs']
    # Run on release PRs only, or changes to this same file
    paths: ['CHANGELOG.md', '.github/workflows/e2e-nextjs.yml']

jobs:
  integration:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bundler: ['default', 'esbuild']
    steps:
      - name: Checking out zip-it-and-ship-it
        uses: actions/checkout@v2
        with:
          path: zip-it-and-ship-it
      - name: Checking out netlify-plugin-nextjs
        uses: actions/checkout@v2
        with:
          repository: netlify/netlify-plugin-nextjs
          path: netlify-plugin-nextjs
      - name: Checking out netlify-cli
        uses: actions/checkout@v2
        with:
          repository: netlify/cli
          path: netlify-cli
      - name: Installing Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '*'
          cache: 'npm'
          # We need to add each of the lockfile paths so that the global npm cache is populated accordingly
          cache-dependency-path: |
            zip-it-and-ship-it/package-lock.json
            netlify-plugin-nextjs/package-lock.json
            netlify-cli/npm-shrinkwrap.json
      - name: Installing netlify-cli
        run: npm ci
        working-directory: netlify-cli
      - name: Installing netlify-plugin-nextjs
        run: npm install
        working-directory: netlify-plugin-nextjs
      - name: Patching netlify.toml to change the bundler
        if: "${{ matrix.bundler != 'default' }}"
        run:
          'npm i @iarna/toml --no-save && node -e "const { readFileSync, writeFileSync } = require(''fs'');const {
          parse, stringify } = require(''@iarna/toml'');const config = parse(readFileSync(''netlify.toml'',
          ''utf-8''));config.functions = { ...config.functions, node_bundler: ''${{ matrix.bundler }}''
          };writeFileSync(''netlify.toml'', stringify(config));"'
        working-directory: netlify-plugin-nextjs
      - name: Symlinking zip-it-and-ship-it (1/2)
        run:
          rm -rf $GITHUB_WORKSPACE/netlify-cli/node_modules/@netlify/zip-it-and-ship-it && mkdir -p
          $GITHUB_WORKSPACE/netlify-cli/node_modules/@netlify && ln -s $GITHUB_WORKSPACE/zip-it-and-ship-it
          $GITHUB_WORKSPACE/netlify-cli/node_modules/@netlify/zip-it-and-ship-it
      - name: Symlinking zip-it-and-ship-it (2/2)
        run:
          rm -rf $GITHUB_WORKSPACE/netlify-cli/node_modules/@netlify/build/node_modules/@netlify/zip-it-and-ship-it &&
          mkdir -p $GITHUB_WORKSPACE/netlify-cli/node_modules/@netlify/build/node_modules/@netlify && ln -s
          $GITHUB_WORKSPACE/zip-it-and-ship-it
          $GITHUB_WORKSPACE/netlify-cli/node_modules/@netlify/build/node_modules/@netlify/zip-it-and-ship-it
      - name: Installing zip-it-and-ship-it
        run: npm install && npm run build
        working-directory: zip-it-and-ship-it
      - name: Building and deploying site
        run:
          $GITHUB_WORKSPACE/netlify-cli/bin/run deploy --build --json --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{
          secrets.NETLIFY_TOKEN }} --functions .netlify/functions > .netlify-deploy-log.json
        working-directory: netlify-plugin-nextjs
      - name: Parsing deploy result
        run: |
          node -e "console.log('deploy_log_url=' + require('./.netlify-deploy-log.json').logs)" >> $GITHUB_ENV
          node -e "console.log('deploy_url=' + require('./.netlify-deploy-log.json').deploy_url)" >> $GITHUB_ENV
        working-directory: netlify-plugin-nextjs
      - name: Posting comment
        uses: KeisukeYamashita/create-comment@v1
        with:
          check-only-first-line: true
          unique: true
          comment: |
            ## Next.js Integration Test (${{ matrix.bundler }})

            - **Deploy URL**: ${{ env.deploy_url }}
            - **Deploy logs**: ${{ env.deploy_log_url }}
